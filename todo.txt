De opdracht voor iteratie 1 is om individueel de frontend van een kwartetspel te maken.

# npm run serve

// BEdoel je met draggen echt drag and drop?
Dus dan hoe je niet een drag drop,
maar meer een draw card en dan check for kwartet toch?

Drag en drop zelf is niet de meest simpele concept.

Okay uhmm, Waar je dan mee begint qua stappen zijn dan
1. Trigger een drag
2. registreer welke item wordt gedraged
3. Controleer of die gedropt wordt.
4. Check of je drop een valide drop is
  4.1 Check op kwartet
  4.2 check of het een kaartje trekken is
5. Voeg de item die je hebt geregistreerd in de juiste array waar je hem hebt gedropt.(Mist die goed is gevalideerd)
6. Hopen op geen bugs


// Een Kaarten spel bestaat uit 4 verschillende soorten kaarten
// Per kaart hebben ze hun eigen waarden van A tot K
// Je unieke waarde zou dus een combinatie moeten worden van de soort en de waarde
// Hiermee kan je uit de unieke waarde nog wel lezen om welke kaart het gaat.

// Wat je dus moet doen is een multidimensionale array maken met daar in 
  de x as als soort kaart
  de y as als waarde van de kaart

je krijgt dan ongv dit
vogel1 : [A2345678910BQK]
vogel2 : [A2345678910BQK]
vogel3 : [A2345678910BQK]
vogel4 : [A2345678910BQK]

// Daarna wil je deze vier dingen combineren in 1 deck. dan krijg je;
[A2345678910BQK - A2345678910BQK - A2345678910BQK - A2345678910BQK] // Met ieder zijn unieke waarde zodat je weet
welke kaart wele is.

volg je me nog? Ja zeker, moet ik de code dan in deck verwerken en in playfield aanroepen?
Ja want de deck is een onderdeel van het speelveld.

Dit meot zeker voor morgen? Aah okay ik wilde al net zeggen. Dat wordt wel redelijk krap anders.
Zeg maar als je er niet helemaal op uit komt vrijdag. Tis niet moeilijk maar als je het net niet ziet weet je niet waar je moet beginnen.
 Risico's als docent. Maar dat maakt hun menselijk :P Isgoed fijne nachtmerries.
 uhm ja ik ben er tot vrijdag middag, omdat donderdag les is en me ma woont er 15 min vandaan tzelfde!


De speler ziet
[] een dichte stapel kaarten waar hij de bovenste kaart vanaf kan pakken
[] een aflegstapel waarop hij kaarten kan wegleggen
[] de kaarten die hij in zijn hand heeft
    [] deze moet hij zelf kunnen sorteren
[] de rijtjes met kaarten die hij op tafel heeft gelegd
[] De kaarten hebben een thema gewoon nummeren (vogel 1 t/m vogel 4)
  NICE TO HAVE: (bv. vogel) en van elk thema zijn er vier kaarten (bv. merel, duif, ekster, roodborstje). 
 
[] Bij aanvang van het spel wordt stapel met kaarten geschud.
[] De speler krijgt een aantal speelkaarten die hij in de hand neemt.
[] De rest van de kaarten vormt de dichte stapel.
 
[] Het is de bedoeling dat de speler kwartetten vormt en die op tafel legt.
    [] Hij kan dit doen door de kaarten in zijn hand te sorteren.
    [] De applicatie moet controleren of de speler zich aan de regels houdt
        - CHECK: Of het een echte kwartet is
    [] Heeft hij vier kaarten van hetzelfde thema
      TRUE = dan mag hij die op tafel leggen. 
      FALSE = de speler de kaarten weer terug in zijn hand.
 
[] Bij elke spelronde
  1. pakt de speler een kaart van de dichte stapel
  2. sorteert hij de kaarten in zijn hand
  3. legt hij de kwartetten die hij heeft op tafel 
  4. legt hij een kaart weg.
  DONE IF:
    - Het spel is klaar als de speler geen kaarten meer in zijn hand heeft (gewonnen) 
    - als er na een spelronde geen nieuwe kaarten meer op de dichte stapel liggen (verloren).
 
Tip:
 
Als het kwartetspel in eerste instantie te ingewikkeld is, begin dan met een vereenvoudigde versie.
Bij deze versie heb je 10 kaarten met opeenvolgende nummers. Er is geen aflegstapel.
De speler krijgt 4 kaarten. Heeft hij de kaart met het laagste nummer, dan mag hij die op tafel leggen. Heeft hij ook het daarop volgende nummer, dan mag hij ook die kaart op tafel leggen.
Kan de speler geen kaart meer op tafel leggen, dan pakt hij een kaart van de stapel.
Bij het afsluiten van de applicatie hoeft de spelsituatie niet te worden onthouden. De volgende niet-functionele eisen zijn ook van belang bij het maken van de webapplicatie:

De applicatie is responsive .
Het is een Single Page Application (SPA).
De app moet worden gemaakt met een zelf te kiezen JavaScript front-end framework.

Check:

- 4 kaarten in hand voor Kwartet.
- Check als geen kwartet en 0 kaarten optie opnieuw beginnen

